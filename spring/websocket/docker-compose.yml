#version: '3.3'
#networks:
#  default:
#    external: name:
#    kafka services: cp-schema-registry: container_name: schema-registry environment: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: ${BOOTSTRAP_SERVERS} SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081 image: confluentinc/cp-schema-registry:5.1.0 ports: - 8081:8081 cp-kafka-rest: container_name: kafka-rest environment: KAFKA_REST_BOOTSTRAP_SERVERS: ${BOOTSTRAP_SERVERS} KAFKA_REST_LISTENERS: http://0.0.0.0:8082 KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081 KAFKA_REST_HOST_NAME: kafka-rest image: confluentinc/cp-kafka-rest:5.1.0 depends_on: - cp-schema-registry ports: - 8082:8082

version: '3'

networks:
  websocket:
    driver: bridge

services:
  #  zookeeper:
  #    platform: linux/amd64
  #    #    image: 'arm64v8/zookeeper:3.8'
  #    image: 'zookeeper:latest'
  #    networks:
  #      - websocket
  #    ports:
  #      - '2181:2181'
  #    environment:
  #      - ALLOW_ANONYMOUS_LOGIN=yes
  #      - ZOO_TLS_CLIENT_AUTH=none
  #      - ZOO_TLS_QUORUM_CLIENT_AUTH=none
  #
  #  kafka:
  #    platform: linux/amd64
  #    #    image: 'bitnami/kafka:3.4.0'
  #    image: 'bitnami/kafka:latest'
  #    networks:
  #      - websocket
  #    ports:
  #      - '9092:9092'
  #    environment:
  #      - KAFKA_BROKER_ID=1
  #      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
  #      - ALLOW_PLAINTEXT_LISTENER=yes
  #      - KAFKA_CFG_LISTENERS=LC://kafka:29092,LX://kafka:9092
  #      - KAFKA_CFG_ADVERTISED_LISTENERS=LC://kafka:29092,LX://${DOCKER_HOST_IP:-localhost}:9092
  #      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=LC:PLAINTEXT,LX:PLAINTEXT
  #      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=LC
  #    depends_on:
  #      - zookeeper

  mysql:
    image: mysql:8.0.31
    container_name: mysql-container
    networks:
      - websocket
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: Spring_Chatting
      MYSQL_USER: jisu
      MYSQL_PASSWORD: jisu
    volumes:
      - mysql_data:/var/lib/mysql


    #  mongodb:
    #    image: mongo:latest
    #    #    container_name: mongo-container
    #    networks:
    #      - websocket
    #    ports:
    #      - "27017:27017"
    #    environment:
    #      MONGO_INITDB_ROOT_USERNAME: root
    #      MONGO_INITDB_ROOT_PASSWORD: password
#    volumes:
#      - mongo_data:/data/db
#volumes:
#  mongo_data:
volumes:
  mysql_data: