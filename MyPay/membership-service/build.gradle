plugins {
    id 'com.palantir.docker' version '0.35.0'
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
//    implementation "io.springfox:springfox-boot-starter:3.0.0"
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    testImplementation 'com.tngtech.archunit:archunit:1.0.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.jetbrains:annotations:23.0.0'
    testImplementation 'org.junit.jupiter:junit-jupiter'

//    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation project(path: ':common')
}

test {
    useJUnitPlatform()
}

//docker {
////    name "${project.group}/${project.name}"
////    files bootJar
////    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
////    dockerfile file('src/main/docker/Dockerfile')
////    copySpec.from('src/main/docker')
////    copySpec.into('/')
////    copySpec.eachFile {
////        it.mode = 0755
////    }
//}

docker {
    println(tasks.bootJar.outputs.files)

    // 이미지 이름
    name rootProject.name+'-'+project.name+":"+version

    // 도커파일 위치
    dockerfile file('./Dockerfile')

    // 도커 이미지에 추가할 파일
    files tasks.bootJar.outputs.files

    // 도커 빌드시 추가할 인자
    buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])

}